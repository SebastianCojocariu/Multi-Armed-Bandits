from contextual_free_bandit import *

class ExploreExploit(ContextualFreeBandit):
	def __init__(self, policy_args):
		super().__init__(policy_args=policy_args)
		self.breakpoint = policy_args["breakpoint"]
		self.policy_name = "ExploreExploit" + "(breakpoint: {}, p: {})".format(self.breakpoint, self.p) 


	def compute_score(self, arm):
		total_reward, n = self.states[arm]["total_reward"], self.states[arm]["n"]
		score = total_reward / n if n > 0 else float("Infinity")
		return score


	def choose_arm(self, event):
		if self.current_event_count < self.breakpoint:
			return random.choice(event["available_arms"])
		return ContextualFreeBandit.choose_arm(self, event=event)
		